{"docstore/metadata": {"785b2611-3930-4e7e-b399-82ad90c738e9": {"doc_hash": "da1c846d11f75f1861d92de540c9e601be50d42d24ff27c6d43ada25879af2f3"}, "5b17b886-776b-4df0-9d0c-777a4299a2f2": {"doc_hash": "17fd6408841c9193cf8b41603c24005d73679b7c4eb674cdde12f71edbfbd2c6"}, "c7e214a1-7b73-4191-ac15-16607942689d": {"doc_hash": "eeacd34015c349185f91af9cf3a91d8bf94fc686b33a91d7de4b1bcd8b0ef629"}, "6c5253d1-111b-4f01-994d-72d56ed9e4b8": {"doc_hash": "f712d8babc9b346bff88f0dc1329f2dbae2bfb4007b2bebceddc6992b20aeb9c"}, "49253357-ab6e-4c08-b66c-8232ac30944b": {"doc_hash": "fa0f8c03b96e8042512e62fd8e5711ea7829dad67cb641b1a1fd5c58702f9a52"}, "85d19fdf-3eff-4a74-a4bf-56d956072e77": {"doc_hash": "4b3f904b0f95dbabc2a0924c73760a84888dd77b09b3183c4106813afc32a707"}, "05e833cb-f249-4c77-a979-c7125075b141": {"doc_hash": "994ad18f1dc394bd453dd52327fcbd440fac42f23876f575a909bc195312bb5d"}, "bb53e065-b84d-423d-8db9-bd3c57a013b3": {"doc_hash": "50ec3be3104de26e8c2f20572da8224bbeb07f70f1268ae2bac922ef91e7b06f"}, "c2e3971f-5862-420a-b003-dd8251096911": {"doc_hash": "1bbc4245e1f289593077484e3545089587f80044f3296032c71cb9e1f12143b2"}, "26b4b321-0f28-48ae-88fc-4c40ff0a21be": {"doc_hash": "59834bc8a5657fca412048340a26cce3e8193767f128c87583ffce62a935daf1"}, "8f2723f4-52a3-4612-8518-21a3cd69f89e": {"doc_hash": "47cd34db43edf7376e73f07d48193def2e650687470ca5acd45fc26844207167"}, "bcc60937-316b-4a7b-b68f-9ef7d7fbfcf3": {"doc_hash": "8ddd5cdfdcd558b277ba27977bbd8658aa5a85973a443da9a4660ceb6c43ba4c"}, "fd6f704b-2a45-4353-bd73-533d38a28c9a": {"doc_hash": "6126f23030216f9ed6f5c7557f4d7baa9e22e71c1b078d23f795dff980931307"}, "26c7999c-ada7-4612-86b9-5bb6190e1da2": {"doc_hash": "4d7fc5a07e3e653b5405a1409d9b9eb4ca20491fc8e9ea97f9b27bc7679bf577"}, "328d3cc6-e131-4da4-93fe-429ab19cebef": {"doc_hash": "f9ae9d6ea674d6aab46cf43863607fbcbd96b96848122fc8eb7f1dbb25a8cada", "ref_doc_id": "785b2611-3930-4e7e-b399-82ad90c738e9"}, "7b4ceadf-12c9-41ef-9249-7b2dd2bed8da": {"doc_hash": "0a94ea9a8c32686a277def9b978272f4960f1bd5d21096fe05c6b76c4a9e5093", "ref_doc_id": "5b17b886-776b-4df0-9d0c-777a4299a2f2"}, "62ed4e64-9aec-4f39-97df-2e3b4546343d": {"doc_hash": "de417e5062ca47430d8d790929302822c3bf1f58326af3496f8ae0a414f3d71f", "ref_doc_id": "c7e214a1-7b73-4191-ac15-16607942689d"}, "b9ac0ca8-996b-499a-b836-2cd2f32e583d": {"doc_hash": "895299209122d423ae59a6ea0033208f5f24633285604a7ef9baa88caa45b5a8", "ref_doc_id": "6c5253d1-111b-4f01-994d-72d56ed9e4b8"}, "93c5e359-9868-4fc8-bc6c-c53e95c24ac3": {"doc_hash": "a5828b9d0c86fe4cac93379a6a98653e51afd89ba73542e60fb487d399f281dc", "ref_doc_id": "49253357-ab6e-4c08-b66c-8232ac30944b"}, "7a427c38-7df5-4995-9b32-19c55a9e6671": {"doc_hash": "d1fe81d66d5bc17c6d5edc5bb967a8937d61bb231d0c9fb76c15a5017460e5b7", "ref_doc_id": "85d19fdf-3eff-4a74-a4bf-56d956072e77"}, "b5822f79-f198-4f76-92a1-2a5ed52f7b46": {"doc_hash": "b7a12c73c8fa887a3a52c1d2afb5cff3c3a60f26e29adb3ecaa7a0345745f366", "ref_doc_id": "05e833cb-f249-4c77-a979-c7125075b141"}, "ffee1770-c8c1-43b2-8fff-f45f881076c6": {"doc_hash": "7a4ca3192f37949e9dccb03355da579e1e2f0104e5d53a3215bdd649fc1530d8", "ref_doc_id": "bb53e065-b84d-423d-8db9-bd3c57a013b3"}, "99954ab7-2b86-424e-9381-10a66b63c7e7": {"doc_hash": "7635bb49953a09234076cebd0f954e0f0d3d3592ac131c21a90560f3cbffaf19", "ref_doc_id": "c2e3971f-5862-420a-b003-dd8251096911"}, "4ac61696-e4b5-4a4a-9407-7d5f084af6ea": {"doc_hash": "028b954c243f9880113bb835a5982e032578e1c632a2333d71b6b7f6c3fa6735", "ref_doc_id": "26b4b321-0f28-48ae-88fc-4c40ff0a21be"}, "6b36f404-5345-4cc3-92aa-16c102ec8dd7": {"doc_hash": "e0c846776488f859e7ef5f72d3dfcc1e644b734a4a221524c713c6d745afb007", "ref_doc_id": "8f2723f4-52a3-4612-8518-21a3cd69f89e"}, "59a0d6f3-93d1-40c9-ab54-af45517548ae": {"doc_hash": "bcfe71bd296fea44b9115ab9faf2afe948611056c33ee4a3fed43148da98a998", "ref_doc_id": "bcc60937-316b-4a7b-b68f-9ef7d7fbfcf3"}, "cefdf849-28a5-40f4-b732-07b9fe4a8ac4": {"doc_hash": "8d2f38a1b9328ae9191b6ac875dc27d991d7bd8c44be3216affa77b4e679c06d", "ref_doc_id": "fd6f704b-2a45-4353-bd73-533d38a28c9a"}, "d22a3d80-5b50-42e5-80de-ef8a4fda8510": {"doc_hash": "f4a7461a129ca14d2b855f03999c602867c6e000ffcc2a0e98838de6e48f1ecf", "ref_doc_id": "26c7999c-ada7-4612-86b9-5bb6190e1da2"}}, "docstore/data": {"328d3cc6-e131-4da4-93fe-429ab19cebef": {"__data__": {"id_": "328d3cc6-e131-4da4-93fe-429ab19cebef", "embedding": null, "metadata": {"page_label": "1", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "785b2611-3930-4e7e-b399-82ad90c738e9", "node_type": "4", "metadata": {"page_label": "1", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "da1c846d11f75f1861d92de540c9e601be50d42d24ff27c6d43ada25879af2f3", "class_name": "RelatedNodeInfo"}}, "text": "/** \n *Submitted for verification at Etherscan.io on 2017 -11-28 \n*/ \n \npragma solidity ^0.4.17;  \n \n/** \n * @title SafeMath  \n * @dev Math operations with safety checks that throw on error  \n */ \nlibrary SafeMath {  \n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {  \n        if (a == 0) {  \n            return 0;  \n        } \n        uint256 c = a * b;  \n        assert(c / a == b);  \n        return c;  \n    } \n \n    function div(uint256 a, uint256 b) internal pure returns (uint256) {  \n        // assert(b > 0); // Solidity automatically throws when dividing by 0  \n        uint256 c = a / b;  \n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold  \n        return c;  \n    } \n \n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {  \n        assert(b <= a);  \n        return a - b; \n    } \n \n    function add(uint256 a, uint256 b) internal pure returns (uint256) {  \n        uint256 c = a + b;", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 975, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7b4ceadf-12c9-41ef-9249-7b2dd2bed8da": {"__data__": {"id_": "7b4ceadf-12c9-41ef-9249-7b2dd2bed8da", "embedding": null, "metadata": {"page_label": "2", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "5b17b886-776b-4df0-9d0c-777a4299a2f2", "node_type": "4", "metadata": {"page_label": "2", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "17fd6408841c9193cf8b41603c24005d73679b7c4eb674cdde12f71edbfbd2c6", "class_name": "RelatedNodeInfo"}}, "text": "assert(c >= a);  \n        return c;  \n    } \n} \n \n/** \n * @title Ownable  \n * @dev The Ownable contract has an owner address, and provides basic authorization control  \n * functions, this simplifies the implementation of \"user permissions\".  \n */ \ncontract Ownable {  \n    address public owner;  \n \n    /** \n      * @dev The Ownable constructor sets the original `owner` of the contract to the sender  \n      * account.  \n      */ \n    function Ownable() public {  \n        owner = msg.sender;  \n    } \n \n    /** \n      * @dev Throws if called by any account other than the owner.  \n      */ \n    modifier onlyOwner() {  \n        require(msg.sender == owner);  \n        _; \n    } \n \n    /** \n    * @dev Allows the current owner to transfer control of the contract to a newOwner.  \n    * @param newOwner The address to transfer ownership to.  \n    */ \n    function transferOwnership(address newOwner) public onlyOwner {", "mimetype": "text/plain", "start_char_idx": 8, "end_char_idx": 926, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "62ed4e64-9aec-4f39-97df-2e3b4546343d": {"__data__": {"id_": "62ed4e64-9aec-4f39-97df-2e3b4546343d", "embedding": null, "metadata": {"page_label": "3", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c7e214a1-7b73-4191-ac15-16607942689d", "node_type": "4", "metadata": {"page_label": "3", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "eeacd34015c349185f91af9cf3a91d8bf94fc686b33a91d7de4b1bcd8b0ef629", "class_name": "RelatedNodeInfo"}}, "text": "if (newOwner != address(0)) {  \n            owner = newOwner;  \n        } \n    } \n \n} \n \n/** \n * @title ERC20Basic  \n * @dev Simpler version of ERC20 interface  \n * @dev see https://github.com/ethereum/EIPs/issues/20  \n */ \ncontract ERC20Basic {  \n    uint public _totalSupply;  \n    function totalSupply() public constant returns (uint);  \n    function balanceOf(address who) public constant returns (uint);  \n    function transfer(address to, uint value) public;  \n    event Transfer(address indexed from, address indexed to, uint value);  \n} \n \n/** \n * @title ERC20 interface  \n * @dev see https://github.com/ethereum/EIPs/issues/20  \n */ \ncontract ERC20 is ERC20Basic {  \n    function allowance(address owner, address spender) public constant returns (uint);  \n    function transferFrom(address from, address to, uint value) public;  \n    function approve(address spender, uint value) public;  \n    event Approval(address indexed owner, address indexed spender, uint value);  \n} \n \n/** \n * @title Basic token  \n * @dev Basic version of StandardToken, with no allowances.", "mimetype": "text/plain", "start_char_idx": 8, "end_char_idx": 1082, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b9ac0ca8-996b-499a-b836-2cd2f32e583d": {"__data__": {"id_": "b9ac0ca8-996b-499a-b836-2cd2f32e583d", "embedding": null, "metadata": {"page_label": "4", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "6c5253d1-111b-4f01-994d-72d56ed9e4b8", "node_type": "4", "metadata": {"page_label": "4", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "f712d8babc9b346bff88f0dc1329f2dbae2bfb4007b2bebceddc6992b20aeb9c", "class_name": "RelatedNodeInfo"}}, "text": "*/ \ncontract BasicToken is Ownable, ERC20Basic {  \n    using SafeMath for uint;  \n \n    mapping(address => uint) public balances;  \n \n    // additional variables for use if transaction fees ever became necessary  \n    uint public basisPointsRate = 0;  \n    uint public maximumFee = 0;  \n \n    /** \n    * @dev Fix for the ERC20 short address attack.  \n    */ \n    modifier onlyPayloadSize(uint size) {  \n        require(!(msg.data.length < size + 4));  \n        _; \n    } \n \n    /** \n    * @dev transfer token for a specified address  \n    * @param _to The address to transfer to.  \n    * @param _value The amount to be transferred.  \n    */ \n    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {  \n        uint fee = (_value.mul(basisPointsRate)).div(10000);  \n        if (fee > maximumFee) {  \n            fee = maximumFee;  \n        } \n        uint sendAmount = _value.sub(fee);  \n        balances[msg.sender] = balances[msg.sender].sub(_value);  \n        balances[_to] = balances[_to].add(sendAmount);  \n        if (fee > 0) {  \n            balances[owner] = balances[owner].add(fee);  \n            Transfer(msg.sender, owner, fee);", "mimetype": "text/plain", "start_char_idx": 1, "end_char_idx": 1163, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "93c5e359-9868-4fc8-bc6c-c53e95c24ac3": {"__data__": {"id_": "93c5e359-9868-4fc8-bc6c-c53e95c24ac3", "embedding": null, "metadata": {"page_label": "5", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "49253357-ab6e-4c08-b66c-8232ac30944b", "node_type": "4", "metadata": {"page_label": "5", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "fa0f8c03b96e8042512e62fd8e5711ea7829dad67cb641b1a1fd5c58702f9a52", "class_name": "RelatedNodeInfo"}}, "text": "} \n        Transfer(msg.sender, _to, sendAmount);  \n    } \n \n    /** \n    * @dev Gets the balance of the specified address.  \n    * @param _owner The address to query the the balance of.  \n    * @return An uint representing the amount owned by the passed address.  \n    */ \n    function balanceOf(address _owner) public constant returns (uint balance) {  \n        return balances[_owner];  \n    } \n \n} \n \n/** \n * @title Standard ERC20 token  \n * \n * @dev Implementation of the basic standard token.  \n * @dev https://github.com/ethereum/EIPs/issues/20  \n * @dev Based oncode by FirstBlood: \nhttps://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol  \n */ \ncontract StandardToken is BasicToken, ERC20 {  \n \n    mapping (address => mapping (address => uint)) public allowed;  \n \n    uint public constant MAX_UINT = 2**256 - 1; \n \n    /** \n    * @dev Transfer tokens from one address to another  \n    * @param _from address The address which you want to send tokens from  \n    * @param _to address The address which you want to transfer to  \n    * @param _value uint the amount of tokens to be transferred", "mimetype": "text/plain", "start_char_idx": 8, "end_char_idx": 1137, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "7a427c38-7df5-4995-9b32-19c55a9e6671": {"__data__": {"id_": "7a427c38-7df5-4995-9b32-19c55a9e6671", "embedding": null, "metadata": {"page_label": "6", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "85d19fdf-3eff-4a74-a4bf-56d956072e77", "node_type": "4", "metadata": {"page_label": "6", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "4b3f904b0f95dbabc2a0924c73760a84888dd77b09b3183c4106813afc32a707", "class_name": "RelatedNodeInfo"}}, "text": "*/ \n    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {  \n        var _allowance = allowed[_from][msg.sender];  \n \n        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met  \n        // if (_value > _allowance) throw;  \n \n        uint fee = (_value.mul(basisPointsRate)).div(10000);  \n        if (fee > maximumFee) {  \n            fee = maximumFee;  \n        } \n        if (_allowance < MAX_UINT) {  \n            allowed[_from][msg.sender] = _allowance.sub(_value);  \n        } \n        uint sendAmount = _value.sub(fee);  \n        balances[_from] = balances[_from].sub(_value);  \n        balances[_to] = balances[_to].add(sendAmount);  \n        if (fee > 0) {  \n            balances[owner] = balances[owner].add(fee);  \n            Transfer(_from, owner, fee);  \n        } \n        Transfer(_from, _to, sendAmount);  \n    } \n \n    /** \n    * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.  \n    * @param _spender The address which will spend the funds.  \n    * @param _value The amount of tokens to be spent.  \n    */ \n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {  \n \n        // To change the approve amount you first have to reduce the addresses`  \n        //  allowance to zero by calling `approve(_spender, 0)` if it is not  \n        //  already 0 to mitigate the race condition described here:", "mimetype": "text/plain", "start_char_idx": 4, "end_char_idx": 1493, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b5822f79-f198-4f76-92a1-2a5ed52f7b46": {"__data__": {"id_": "b5822f79-f198-4f76-92a1-2a5ed52f7b46", "embedding": null, "metadata": {"page_label": "7", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "05e833cb-f249-4c77-a979-c7125075b141", "node_type": "4", "metadata": {"page_label": "7", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "994ad18f1dc394bd453dd52327fcbd440fac42f23876f575a909bc195312bb5d", "class_name": "RelatedNodeInfo"}}, "text": "//  https://github.com/ethereum/EIPs/issues/20#issuecomment -263524729  \n        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));  \n \n        allowed[msg.sender][_spender] = _value;  \n        Approval(msg.sender, _spender, _value);  \n    } \n \n    /** \n    * @dev Function to check the amount of tokens than an owner allowed to a spender.  \n    * @param _owner address The address which owns the funds.  \n    * @param _spender address The address which will spend the funds.  \n    * @return A uint specifying the amount of tokens still available for the spender.  \n    */ \n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {  \n        return allowed[_owner][_spender];  \n    } \n \n} \n \n \n/** \n * @title Pausable  \n * @dev Base contract which allows children to implement an emergency stop mechanism.  \n */ \ncontract Pausable is Ownable {  \n  event Pause();  \n  event Unpause();  \n \n  bool public paused = false;  \n \n \n  /** \n   * @dev Modifier to make a function callable only when the contract is not paused.  \n   */", "mimetype": "text/plain", "start_char_idx": 8, "end_char_idx": 1089, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "ffee1770-c8c1-43b2-8fff-f45f881076c6": {"__data__": {"id_": "ffee1770-c8c1-43b2-8fff-f45f881076c6", "embedding": null, "metadata": {"page_label": "8", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bb53e065-b84d-423d-8db9-bd3c57a013b3", "node_type": "4", "metadata": {"page_label": "8", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "50ec3be3104de26e8c2f20572da8224bbeb07f70f1268ae2bac922ef91e7b06f", "class_name": "RelatedNodeInfo"}}, "text": "modifier whenNotPaused() {  \n    require(!paused);  \n    _; \n  } \n \n  /** \n   * @dev Modifier to make a function callable only when the contract is paused.  \n   */ \n  modifier whenPaused() {  \n    require(paused);  \n    _; \n  } \n \n  /** \n   * @dev called by the owner to pause, triggers stopped state  \n   */ \n  function pause() onlyOwner whenNotPaused public {  \n    paused = true;  \n    Pause();  \n  } \n \n  /** \n   * @dev called by the owner to unpause, returns to normal state  \n   */ \n  function unpause() onlyOwner whenPaused public {  \n    paused = false;  \n    Unpause();  \n  } \n} \n \ncontract BlackList is Ownable, BasicToken {  \n \n    /////// Getters to allow the same blacklist to be used also by other contracts (including upgraded Tether) ///////  \n    function getBlackListStatus(address _maker) external constant returns (bool) {", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 844, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "99954ab7-2b86-424e-9381-10a66b63c7e7": {"__data__": {"id_": "99954ab7-2b86-424e-9381-10a66b63c7e7", "embedding": null, "metadata": {"page_label": "9", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c2e3971f-5862-420a-b003-dd8251096911", "node_type": "4", "metadata": {"page_label": "9", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "1bbc4245e1f289593077484e3545089587f80044f3296032c71cb9e1f12143b2", "class_name": "RelatedNodeInfo"}}, "text": "return isBlackListed[_maker];  \n    } \n \n    function getOwner() external constant returns (address) {  \n        return owner;  \n    } \n \n    mapping (address => bool) public isBlackListed;  \n     \n    function addBlackList (address _evilUser) public onlyOwner {  \n        isBlackListed[_evilUser] = true;  \n        AddedBlackList(_evilUser);  \n    } \n \n    function removeBlackList (address _clearedUser) public onlyOwner {  \n        isBlackListed[_clearedUser] = false;  \n        RemovedBlackList(_clearedUser);  \n    } \n \n    function destroyBlackFunds (address _blackListedUser) public onlyOwner {  \n        require(isBlackListed[_blackListedUser]);  \n        uint dirtyFunds = balanceOf(_blackListedUser);  \n        balances[_blackListedUser] = 0;  \n        _totalSupply -= dirtyFunds;  \n        DestroyedBlackFunds(_blackListedUser, dirtyFunds);  \n    } \n \n    event DestroyedBlackFunds(address _blackListedUser, uint _balance);  \n \n    event AddedBlackList(address _user);  \n \n    event RemovedBlackList(address _user);  \n \n}", "mimetype": "text/plain", "start_char_idx": 8, "end_char_idx": 1040, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4ac61696-e4b5-4a4a-9407-7d5f084af6ea": {"__data__": {"id_": "4ac61696-e4b5-4a4a-9407-7d5f084af6ea", "embedding": null, "metadata": {"page_label": "10", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26b4b321-0f28-48ae-88fc-4c40ff0a21be", "node_type": "4", "metadata": {"page_label": "10", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "59834bc8a5657fca412048340a26cce3e8193767f128c87583ffce62a935daf1", "class_name": "RelatedNodeInfo"}}, "text": "contract UpgradedStandardToken is StandardToken{  \n    // those methods are called by the legacy contract  \n    // and they must ensure msg.sender to be the contract address  \n    function transferByLegacy(address from, address to, uint value) public;  \n    function transferFromByLegacy(address sender, address from, address spender, uint value) public;  \n    function approveByLegacy(address from, address spender, uint value) public;  \n} \n \ncontract TetherToken is Pausable, StandardToken, BlackList {  \n \n    string public name;  \n    string public symbol;  \n    uint public decimals;  \n    address public upgradedAddress;  \n    bool public deprecated;  \n \n    //  The contract can be initialized with a number of tokens  \n    //  All the tokens are deposited to the owner address  \n    // \n    // @param _balance Initial supply of the contract  \n    // @param _name Token Name  \n    // @param _symbol Token symbol  \n    // @param _decimals Token decimals  \n    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {  \n        _totalSupply = _initialSupply;  \n        name = _name;  \n        symbol = _symbol;  \n        decimals = _decimals;  \n        balances[owner] = _initialSupply;  \n        deprecated = false;  \n    } \n \n    // Forward ERC20 methods to upgraded contract if this one is deprecated", "mimetype": "text/plain", "start_char_idx": 2, "end_char_idx": 1350, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "6b36f404-5345-4cc3-92aa-16c102ec8dd7": {"__data__": {"id_": "6b36f404-5345-4cc3-92aa-16c102ec8dd7", "embedding": null, "metadata": {"page_label": "11", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "8f2723f4-52a3-4612-8518-21a3cd69f89e", "node_type": "4", "metadata": {"page_label": "11", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "47cd34db43edf7376e73f07d48193def2e650687470ca5acd45fc26844207167", "class_name": "RelatedNodeInfo"}}, "text": "function transfer(address _to, uint _value) public whenNotPaused {  \n        require(!isBlackListed[msg.sender]);  \n        if (deprecated) {  \n            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);  \n        } else {  \n            return super.transfer(_to, _value);  \n        } \n    } \n \n    // Forward ERC20 methods to upgraded contract if this one is deprecated  \n    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {  \n        require(!isBlackListed[_from]);  \n        if (deprecated) {  \n            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);  \n        } else {  \n            return super.transferFrom(_from, _to, _value);  \n        } \n    } \n \n    // Forward ERC20 methods to upgraded contract if this one is deprecated  \n    function balanceOf(address who) public constant returns (uint) {  \n        if (deprecated) {  \n            return UpgradedStandardToken(upgradedAddress).balanceOf(who);  \n        } else {  \n            return super.balanceOf(who);  \n        } \n    } \n \n    // Forward ERC20 methods to upgraded contract if this one is deprecated  \n    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {  \n        if (deprecated) {  \n            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);  \n        } else {  \n            return super.approve(_spender, _value);", "mimetype": "text/plain", "start_char_idx": 4, "end_char_idx": 1499, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "59a0d6f3-93d1-40c9-ab54-af45517548ae": {"__data__": {"id_": "59a0d6f3-93d1-40c9-ab54-af45517548ae", "embedding": null, "metadata": {"page_label": "12", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "bcc60937-316b-4a7b-b68f-9ef7d7fbfcf3", "node_type": "4", "metadata": {"page_label": "12", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "8ddd5cdfdcd558b277ba27977bbd8658aa5a85973a443da9a4660ceb6c43ba4c", "class_name": "RelatedNodeInfo"}}, "text": "} \n    } \n \n    // Forward ERC20 methods to upgraded contract if this one is deprecated  \n    function allowance(address _owner, address _spender) public constant returns (uint remaining) {  \n        if (deprecated) {  \n            return StandardToken(upgradedAddress).allowance(_owner, _spender);  \n        } else {  \n            return super.allowance(_owner, _spender);  \n        } \n    } \n \n    // deprecate current contract in favour of a new one  \n    function deprecate(address _upgradedAddress) public onlyOwner {  \n        deprecated = true;  \n        upgradedAddress = _upgradedAddress;  \n        Deprecate(_upgradedAddress);  \n    } \n \n    // deprecate current contract if favour of a new one  \n    function totalSupply() public constant returns (uint) {  \n        if (deprecated) {  \n            return StandardToken(upgradedAddress).totalSupply();  \n        } else {  \n            return _totalSupply;  \n        } \n    } \n \n    // Issue a new amount of tokens  \n    // these tokens are deposited into the owner address  \n    // \n    // @param _amount Number of tokens to be issued  \n    function issue(uint amount) public onlyOwner {  \n        require(_totalSupply + amount > _totalSupply);", "mimetype": "text/plain", "start_char_idx": 8, "end_char_idx": 1212, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "cefdf849-28a5-40f4-b732-07b9fe4a8ac4": {"__data__": {"id_": "cefdf849-28a5-40f4-b732-07b9fe4a8ac4", "embedding": null, "metadata": {"page_label": "13", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fd6f704b-2a45-4353-bd73-533d38a28c9a", "node_type": "4", "metadata": {"page_label": "13", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "6126f23030216f9ed6f5c7557f4d7baa9e22e71c1b078d23f795dff980931307", "class_name": "RelatedNodeInfo"}}, "text": "require(balances[owner] + amount > balances[owner]);  \n \n        balances[owner] += amount;  \n        _totalSupply += amount;  \n        Issue(amount);  \n    } \n \n    // Redeem tokens.  \n    // These tokens are withdrawn from the owner address  \n    // if the balance must be enough to cover the redeem  \n    // or the call will fail.  \n    // @param _amount Number of tokens to be issued  \n    function redeem(uint amount) public onlyOwner {  \n        require(_totalSupply >= amount);  \n        require(balances[owner] >= amount);  \n \n        _totalSupply -= amount;  \n        balances[owner] -= amount;  \n        Redeem(amount);  \n    } \n \n    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {  \n        // Ensure transparency by hardcoding limit beyond which fees can never be added  \n        require(newBasisPoints < 20);  \n        require(newMaxFee < 50);  \n \n        basisPointsRate = newBasisPoints;  \n        maximumFee = newMaxFee.mul(10**decimals);  \n \n        Params(basisPointsRate, maximumFee);  \n    } \n \n    // Called when new token are issued  \n    event Issue(uint amount);", "mimetype": "text/plain", "start_char_idx": 8, "end_char_idx": 1122, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "d22a3d80-5b50-42e5-80de-ef8a4fda8510": {"__data__": {"id_": "d22a3d80-5b50-42e5-80de-ef8a4fda8510", "embedding": null, "metadata": {"page_label": "14", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "26c7999c-ada7-4612-86b9-5bb6190e1da2", "node_type": "4", "metadata": {"page_label": "14", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}, "hash": "4d7fc5a07e3e653b5405a1409d9b9eb4ca20491fc8e9ea97f9b27bc7679bf577", "class_name": "RelatedNodeInfo"}}, "text": "// Called when tokens are redeemed  \n    event Redeem(uint amount);  \n \n    // Called when contract is deprecated  \n    event Deprecate(address newAddress);  \n \n    // Called if contract ever adds fees  \n    event Params(uint feeBasisPoints, uint maxFee);  \n}", "mimetype": "text/plain", "start_char_idx": 6, "end_char_idx": 265, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/ref_doc_info": {"785b2611-3930-4e7e-b399-82ad90c738e9": {"node_ids": ["328d3cc6-e131-4da4-93fe-429ab19cebef"], "metadata": {"page_label": "1", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "5b17b886-776b-4df0-9d0c-777a4299a2f2": {"node_ids": ["7b4ceadf-12c9-41ef-9249-7b2dd2bed8da"], "metadata": {"page_label": "2", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "c7e214a1-7b73-4191-ac15-16607942689d": {"node_ids": ["62ed4e64-9aec-4f39-97df-2e3b4546343d"], "metadata": {"page_label": "3", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "6c5253d1-111b-4f01-994d-72d56ed9e4b8": {"node_ids": ["b9ac0ca8-996b-499a-b836-2cd2f32e583d"], "metadata": {"page_label": "4", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "49253357-ab6e-4c08-b66c-8232ac30944b": {"node_ids": ["93c5e359-9868-4fc8-bc6c-c53e95c24ac3"], "metadata": {"page_label": "5", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "85d19fdf-3eff-4a74-a4bf-56d956072e77": {"node_ids": ["7a427c38-7df5-4995-9b32-19c55a9e6671"], "metadata": {"page_label": "6", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "05e833cb-f249-4c77-a979-c7125075b141": {"node_ids": ["b5822f79-f198-4f76-92a1-2a5ed52f7b46"], "metadata": {"page_label": "7", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "bb53e065-b84d-423d-8db9-bd3c57a013b3": {"node_ids": ["ffee1770-c8c1-43b2-8fff-f45f881076c6"], "metadata": {"page_label": "8", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "c2e3971f-5862-420a-b003-dd8251096911": {"node_ids": ["99954ab7-2b86-424e-9381-10a66b63c7e7"], "metadata": {"page_label": "9", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "26b4b321-0f28-48ae-88fc-4c40ff0a21be": {"node_ids": ["4ac61696-e4b5-4a4a-9407-7d5f084af6ea"], "metadata": {"page_label": "10", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "8f2723f4-52a3-4612-8518-21a3cd69f89e": {"node_ids": ["6b36f404-5345-4cc3-92aa-16c102ec8dd7"], "metadata": {"page_label": "11", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "bcc60937-316b-4a7b-b68f-9ef7d7fbfcf3": {"node_ids": ["59a0d6f3-93d1-40c9-ab54-af45517548ae"], "metadata": {"page_label": "12", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "fd6f704b-2a45-4353-bd73-533d38a28c9a": {"node_ids": ["cefdf849-28a5-40f4-b732-07b9fe4a8ac4"], "metadata": {"page_label": "13", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}, "26c7999c-ada7-4612-86b9-5bb6190e1da2": {"node_ids": ["d22a3d80-5b50-42e5-80de-ef8a4fda8510"], "metadata": {"page_label": "14", "file_name": "usdt.pdf", "file_path": "C:\\Users\\14033\\OneDrive\\Documents\\unitTesting\\contracts\\usdt.pdf", "file_type": "application/pdf", "file_size": 141173, "creation_date": "2024-08-16", "last_modified_date": "2024-08-16"}}}}